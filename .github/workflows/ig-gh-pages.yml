name: Build and Deploy FHIR IG to GitHub Pages

on:
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force complete rebuild (clear cache)'
        required: false
        default: false
        type: boolean

# Environment variables
env:
  IG_SHORTNAME: nlk-test
  NODE_VERSION: '20'
  JAVA_VERSION: '17'

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          
      - name: 💎 Setup Ruby and Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          
      - name: 🌐 Install Jekyll
        run: |
          echo "💎 Installing Jekyll and dependencies"
          gem install jekyll bundler
          jekyll --version
          echo "✅ Jekyll installed successfully"
          
      - name: 🖥️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 📋 Initialize npm workspace
        working-directory: ${{ env.IG_SHORTNAME }}
        run: |
          if [ ! -f "package.json" ]; then
            echo "📦 Creating package.json for dependency management"
            cat > package.json << 'EOF'
          {
            "name": "nlk-test-ig",
            "version": "1.0.0",
            "description": "Norwegian Laboratory Codebook FHIR IG",
            "private": true,
            "dependencies": {}
          }
          EOF
          fi

      - name: 📦 Cache FHIR packages and npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.fhir/packages
            ~/.npm
            ${{ env.IG_SHORTNAME }}/input-cache
            ${{ env.IG_SHORTNAME }}/fsh-generated
            ${{ env.IG_SHORTNAME }}/node_modules
          key: fhir-ig-cache-${{ runner.os }}-${{ hashFiles('**/sushi-config.yaml', '**/package.json', '**/package-lock.json') }}
          restore-keys: |
            fhir-ig-cache-${{ runner.os }}-

      - name: 🔥 Install FHIR packages and dependencies
        run: |
          echo "📦 Installing Sushi (FSH compiler)"
          npm install -g fsh-sushi
          
          echo "📦 Installing FHIR R4 Core package"
          npm --registry https://packages.simplifier.net install hl7.fhir.r4.core@4.0.1
          
          echo "🇳🇴 Installing HL7 Norway basis package"
          curl -L -o hl7.fhir.no.basis-2.2.0-snapshots.tgz https://raw.githubusercontent.com/HL7Norway/resources/main/snapshots/hl7.fhir.no.basis-2.2.0-snapshots.tgz
          npm install hl7.fhir.no.basis-2.2.0-snapshots.tgz
          
          echo "🗂️ Setting up FHIR package cache"
          mkdir -p $HOME/.fhir/packages/hl7.fhir.no.basis#2.2.0/package
          cp -r ./node_modules/hl7.fhir.no.basis/* $HOME/.fhir/packages/hl7.fhir.no.basis#2.2.0/package/
          
      - name: 🔒 Verify input directory structure
        run: |
          echo "🔒 Security check: Ensuring only input directory is used"
          echo "Input directory structure:"
          ls -la ${{ env.IG_SHORTNAME }}/input/
          echo "FSH files in input directory:"
          find ${{ env.IG_SHORTNAME }}/input/ -name "*.fsh" -type f | head -10
          echo "❌ Resources directory will NOT be used for validation"
          echo "✅ Only ${{ env.IG_SHORTNAME }}/input/ and subdirectories will be processed"

      - name: ⚡ Clear cache (if forced)
        if: ${{ github.event.inputs.force_rebuild == 'true' }}
        working-directory: ${{ env.IG_SHORTNAME }}
        run: |
          echo "🧹 Force rebuild requested - clearing caches"
          rm -rf input-cache/publisher.jar
          rm -rf fsh-generated/
          rm -rf output/
          
      - name: 📥 Download IG Publisher
        working-directory: ${{ env.IG_SHORTNAME }}
        run: |
          echo "📦 Downloading latest IG Publisher"
          mkdir -p input-cache
          if [ ! -f "input-cache/publisher.jar" ] || [ "${{ github.event.inputs.force_rebuild }}" == "true" ]; then
            curl -L https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar -o input-cache/publisher.jar
            echo "✅ Downloaded publisher.jar ($(du -h input-cache/publisher.jar | cut -f1))"
          else
            echo "♻️ Using cached publisher.jar ($(du -h input-cache/publisher.jar | cut -f1))"
          fi
          
      - name: 🏗️ Build IG with Sushi and Publisher
        working-directory: ${{ env.IG_SHORTNAME }}
        run: |
          echo "🍣 Running Sushi (FSH → FHIR) - input directory only"
          echo "FSH files found:"
          find input/fsh/ -name "*.fsh" -type f
          sushi . > sushi-build.log 2>&1 || (cat sushi-build.log && exit 1)
          cat sushi-build.log
          echo "✅ SUSHI build complete - only input directory used"
          
          echo "🔥 Running IG Publisher"
          java -Xmx4g -jar input-cache/publisher.jar -ig ig.ini -publish https://rockphotog.github.io/nlk-test/
          
      - name: 📋 Build summary
        working-directory: ${{ env.IG_SHORTNAME }}
        run: |
          echo "✅ Build completed successfully"
          if [ -d "output" ]; then
            echo "📊 Output size: $(du -sh output | cut -f1)"
            echo "📁 Output files: $(find output -type f | wc -l) files"
          else
            echo "❌ Output directory not found"
            exit 1
          fi

      - name: 🚀 Deploy to GitHub Pages
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ env.IG_SHORTNAME }}/output
          destination_dir: .
          commit_message: '🔥 Deploy FHIR IG - Norwegian Laboratory Codebook'
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          
      - name: 📋 Deployment summary
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "🎉 Successfully deployed FHIR IG to GitHub Pages"
          echo "🔗 URL: https://rockphotog.github.io/nlk-test/"
          echo "📦 Published to gh-pages branch"
          echo "✅ Deployment completed successfully"